{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/ButtonMore/ButtonMore.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","api/fetchImages.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","utils/setScrollTo.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/ButtonMore/ButtonMore.jsx","components/Loader/Loader.jsx","App.jsx","index.js"],"names":["module","exports","headerRoot","document","querySelector","Searchbar","handleQuery","useState","value","setValue","inputId","uuidv4","createPortal","className","s","header","inputWrapper","htmlFor","label","icon","input","debounceTimeout","id","type","autoComplete","autoFocus","placeholder","onChange","e","inputValue","target","baseURL","key","fetchImages","a","page","query","axios","data","console","log","message","ImageGalleryItem","url","tags","onClick","largeImage","item","image","src","alt","loading","setScrollTo","window","scrollTo","top","behavior","ImageGallery","images","handleClickImage","useEffect","length","matchMedia","matches","documentElement","scrollHeight","list","map","webformatURL","largeImageURL","modalRoot","Modal","handleCloseModal","handleBackdropClose","addEventListener","handleEscClose","body","style","overflow","removeEventListener","code","backdrop","button","close","modal","selectedImage","find","getTags","ButtonMore","handleClickLoadMore","loadingRoot","Loader","wrapper","loader","color","height","width","App","setQuery","setPage","setImages","quantityImages","setQuantityImages","totalHits","setTotalHits","setSelectedImage","status","setStatus","getImages","hits","trim","receivedImages","prev","setImagesArr","isLoadPossible","isLoading","split","filter","join","nodeName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf801b71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__31rpU\",\"modal\":\"Modal_modal__3KYZI\",\"button\":\"Modal_button__1OX1I\",\"close\":\"Modal_close__cKYyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__OsAvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__1RZ9M\",\"loader\":\"Loader_loader__1Izfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__-uIIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonMore_button__1DPFc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__2rfPG\",\"inputWrapper\":\"Searchbar_inputWrapper__njQgP\",\"label\":\"Searchbar_label__7Dzee\",\"icon\":\"Searchbar_icon__3a5pq\",\"input\":\"Searchbar_input__2mPvn\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DebounceInput } from 'react-debounce-input';\nimport { FaSearch } from 'react-icons/fa';\nimport { createPortal } from 'react-dom';\nimport s from './Searchbar.module.css';\nimport PropTypes from 'prop-types';\n\nconst headerRoot = document.querySelector('#header-root');\n\nconst Searchbar = ({ handleQuery }) => {\n  const [value, setValue] = useState('');\n\n  const onChange = e => {\n    const inputValue = e.target.value;\n    setValue(inputValue);\n    handleQuery(inputValue);\n  };\n\n  const inputId = uuidv4();\n\n  return createPortal(\n    <header className={s.header}>\n      <div className={s.inputWrapper}>\n        <label htmlFor={inputId} className={s.label}>\n          <FaSearch className={s.icon} />\n          <DebounceInput\n            className={s.input}\n            debounceTimeout={750}\n            id={inputId}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={value}\n            onChange={onChange}\n          />\n        </label>\n      </div>\n    </header>,\n    headerRoot,\n  );\n};\n\nSearchbar.propTypes = {\n  handleQuery: PropTypes.func.isRequired,\n};\n\nexport { Searchbar };\n","import axios from 'axios';\n\nconst baseURL = 'https://pixabay.com/api/';\nconst key = '21989340-5677ac132e2fa2f040ad0925d';\nconst perPage = 12;\n\nconst fetchImages = async ({ page = 1, query } = {}) => {\n  try {\n    const data = await axios(\n      `${baseURL}?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\n    );\n    return data;\n  } catch (e) {\n    console.log(e.message);\n  }\n};\n\nexport { fetchImages };\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ url, tags, onClick, largeImage }) => {\n  return (\n    <li className={s.item}>\n      <img\n        className={s.image}\n        src={url}\n        alt={tags}\n        onClick={() => onClick(largeImage)}\n        loading={'lazy'}\n      />\n    </li>\n  );\n};\n\nexport { ImageGalleryItem };\n\nImageGalleryItem.propTypes = {\n  url: PropTypes.string,\n  tags: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n  largeImage: PropTypes.string,\n};\n","const setScrollTo = value => {\n  window.scrollTo({\n    top: value,\n    behavior: 'smooth',\n  });\n};\n\nexport { setScrollTo };\n","import PropTypes from 'prop-types';\nimport { ImageGalleryItem } from './ImageGalleryItem/ImageGalleryItem';\nimport s from './ImageGallery.module.css';\nimport { useEffect } from 'react';\nimport { setScrollTo } from '../../utils/setScrollTo';\n\nconst ImageGallery = ({ images, handleClickImage }) => {\n  useEffect(() => {\n    if (\n      images.length > 12 &&\n      window.matchMedia('(min-width: 1600px)').matches\n    ) {\n      setScrollTo(document.documentElement.scrollHeight - 1090);\n    }\n  }, [images]);\n\n  return (\n    <ul className={s.list}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={`${image.id} ${image.webformatURL}`}\n          url={image.webformatURL}\n          largeImage={image.largeImageURL}\n          tags={image.tags}\n          onClick={handleClickImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  handleClickImage: PropTypes.func.isRequired,\n};\n\nexport { ImageGallery };\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { IoCloseCircleOutline } from 'react-icons/io5';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ url, images, handleCloseModal, handleBackdropClose }) => {\n  useEffect(() => {\n    document.addEventListener('keydown', handleEscClose);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n      document.body.style.overflow = 'auto';\n    };\n  });\n\n  const getTags = () => {\n    const selectedImage = images.find(image => image.largeImageURL === url);\n    if (selectedImage) {\n      return selectedImage.tags;\n    }\n  };\n\n  const handleEscClose = e => {\n    if (e.code === 'Escape') {\n      handleCloseModal();\n    }\n  };\n\n  return createPortal(\n    <div className={s.backdrop} onClick={handleBackdropClose}>\n      <button\n        className={s.button}\n        type={'button'}\n        aria-label={'Close'}\n        onClick={handleCloseModal}\n      >\n        <IoCloseCircleOutline className={s.close} />\n      </button>\n      <div className={s.modal}>\n        <img src={url} alt={getTags()} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  url: PropTypes.string,\n  images: PropTypes.arrayOf(PropTypes.object),\n  handleCloseModal: PropTypes.func.isRequired,\n  handleBackdropClose: PropTypes.func.isRequired,\n};\n\nexport { Modal };\n","import s from './ButtonMore.module.css';\n\nconst ButtonMore = ({ handleClickLoadMore }) => {\n  return (\n    <button className={s.button} type={'button'} onClick={handleClickLoadMore}>\n      Load more\n    </button>\n  );\n};\n\nexport { ButtonMore };\n","import LoaderOval from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\nimport s from './Loader.module.css';\n\nconst loadingRoot = document.querySelector('#loading-root');\n\nconst Loader = () => {\n  return createPortal(\n    <div className={s.wrapper}>\n      <LoaderOval\n        className={s.loader}\n        type=\"Oval\"\n        color=\"#3faae5\"\n        height={75}\n        width={75}\n      />\n    </div>,\n    loadingRoot,\n  );\n};\n\nexport { Loader };\n","import { useEffect, useState } from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { fetchImages } from 'api/fetchImages';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\nimport { Modal } from 'components/Modal/Modal';\nimport { ButtonMore } from './components/ButtonMore/ButtonMore';\nimport { Loader } from 'components/Loader/Loader';\nimport { setScrollTo } from './utils/setScrollTo';\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [quantityImages, setQuantityImages] = useState(0);\n  const [totalHits, setTotalHits] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [status, setStatus] = useState('idle');\n\n  const getImages = async ({ page, query }) => {\n    const data = await fetchImages({ page, query });\n    setTotalHits(data.data.totalHits);\n    return data.data.hits;\n  };\n\n  useEffect(() => {\n    if (query.trim() === '' || query.length < 2) {\n      return;\n    }\n    const setImagesArr = async () => {\n      setStatus('pending');\n      const receivedImages = await getImages({ page, query });\n      if (page === 1) {\n        setImages(receivedImages);\n        setScrollTo(-document.documentElement.scrollHeight);\n      } else {\n        setImages(prev => [...prev, ...receivedImages]);\n      }\n      setStatus('resolved');\n    };\n    setImagesArr();\n  }, [query, page]);\n\n  useEffect(() => {\n    setQuantityImages(images.length);\n  }, [images]);\n\n  const handleQuery = value => {\n    const query = value\n      .trim()\n      .split(' ')\n      .filter(item => item !== '' && item !== ' ')\n      .join('+');\n    setQuery(query);\n    setPage(1);\n  };\n\n  const handleClickImage = largeImage => {\n    setSelectedImage(largeImage);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedImage(null);\n  };\n\n  const handleBackdropClose = e => {\n    if (e.target.nodeName !== 'IMG') {\n      handleCloseModal();\n    }\n  };\n\n  const handleClickLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const isLoadPossible = images.length > 0 && quantityImages < totalHits;\n  const isLoading = status === 'pending';\n\n  return (\n    <>\n      <Searchbar handleQuery={handleQuery} />\n      {isLoading && <Loader />}\n      <ImageGallery images={images} handleClickImage={handleClickImage} />\n      {isLoadPossible && (\n        <ButtonMore handleClickLoadMore={handleClickLoadMore} />\n      )}\n      {selectedImage && (\n        <Modal\n          url={selectedImage}\n          images={images}\n          handleCloseModal={handleCloseModal}\n          handleBackdropClose={handleBackdropClose}\n        />\n      )}\n    </>\n  );\n};\n\nexport { App };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}